<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spawn_box</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create

spawning = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn new items as needed

spawned_any = false;

show_debug_message("checking if I need to spawn...");
var checkx = x;
var checky = y + obj_gameboard.spr_size;
spawning = true;
var obj_to_test = instance_place(checkx, checky, obj_parent_destructable); 
if (obj_to_test == noone) {    
    spawned_any = true;
    obj_gameboard.has_moved = spawned_any;
    var to_spawn = irandom(5) + 1;
    switch to_spawn {        
        case JUNK:
            new_obj = instance_create(checkx, checky, obj_junk);     
            new_obj.item_type = JUNK;
            break;            
        case ROCK:
            new_obj = instance_create(checkx, checky, obj_rock);     
            new_obj.item_type = ROCK;
            break;
        case PAPER:
            new_obj = instance_create(checkx, checky, obj_paper);     
            new_obj.item_type = PAPER;
            break;
        case SCISSORS:
            new_obj = instance_create(checkx, checky, obj_scissors);     
            new_obj.item_type = SCISSORS;
            break;
        case ROCK_JUNK:
            new_obj = instance_create(checkx, checky, obj_r_junk);     
            new_obj.item_type = ROCK_JUNK;
            break;        
        case PAPER_JUNK:
            new_obj = instance_create(checkx, checky, obj_p_junk);     
            new_obj.item_type = PAPER_JUNK;
            break;        
        case SCISSORS_JUNK:
            new_obj = instance_create(checkx, checky, obj_s_junk);     
            new_obj.item_type = SCISSORS_JUNK;
            break;
    }        
}    

obj_gameboard.has_changed = spawned_any;

spawning = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if we need to spawn anything

//check every 5 frames
if (alarm[0] == -1 &amp;&amp; obj_gameboard.has_moved &amp;&amp; !spawning) {
    alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
