<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create

current_item = noone;
has_moved = false;
has_killed = false;
has_changed = false;
spawning = false;

//scores
p_junk_broken = 0;
r_junk_broken = 0;
s_junk_broken = 0;
r_broken = 0;
p_broken = 0;
s_broken = 0;

//set the grid width and height (number of objects)
grid_width = 15;
grid_height = 15;
spr_size = 32;
max_y = spr_size * (grid_height + 1);

for (var b = spr_size * 2; b &lt;= spr_size * (grid_width + 1); b+= spr_size) {
    instance_create(b, 2*spr_size, obj_spawn_box);         
}

randomize();
for (var i = 0; i &lt; grid_width; i++) {
    for (var j = 0; j &lt; grid_height; j++) {
        switch irandom(5) + 1 {
            case JUNK:
                new_obj = instance_create(2 * spr_size + i * spr_size, 2 * spr_size + j * spr_size, obj_junk);     
                new_obj.item_type = JUNK;
                break;    
            case ROCK:
                new_obj = instance_create(2 * spr_size + i * spr_size, 2 * spr_size + j * spr_size, obj_rock);     
                new_obj.item_type = ROCK;
                break;
            case PAPER:
                new_obj = instance_create(2 * spr_size + i * spr_size, 2 * spr_size + j * spr_size, obj_paper);     
                new_obj.item_type = PAPER;
                break;
            case SCISSORS:
                new_obj = instance_create(2 * spr_size + i * spr_size, 2 * spr_size + j * spr_size, obj_scissors);     
                new_obj.item_type = SCISSORS;
                break;
            case ROCK_JUNK:
                new_obj = instance_create(2 * spr_size + i * spr_size, 2 * spr_size + j * spr_size, obj_r_junk);     
                new_obj.item_type = ROCK_JUNK;
                break;
            case PAPER_JUNK:
                new_obj = instance_create(2 * spr_size + i * spr_size, 2 * spr_size + j * spr_size, obj_p_junk);     
                new_obj.item_type = PAPER_JUNK;
                break;
            case SCISSORS_JUNK:
                new_obj = instance_create(2 * spr_size + i * spr_size, 2 * spr_size + j * spr_size, obj_s_junk);     
                new_obj.item_type = SCISSORS_JUNK;
                break;
        }        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// reset the changed variable
obj_gameboard.has_moved = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///step
if (alarm[0] == -1) {
    alarm[0] = 60;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw gui

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
